{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst input = document.getElementById('datetime-picker');\nconst btn = document.querySelector('.start-btn');\nlet userSelectedDate;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  disableMobile: true,\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n      let currentDate = new Date();\n\n      if(userSelectedDate.getTime() < currentDate.getTime()) {\n          btn.disabled = true;\n\n          iziToast.show({\n              message: 'Please choose a date in the future',\n              position: 'topRight',\n              backgroundColor: 'red',\n              messageColor: 'white',\n              theme: 'dark',\n              iconUrl: '../img/error.svg'\n          });\n      } else {\n          btn.disabled = false;\n      }\n  },\n};\n\nflatpickr(input, options);\n\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n}\n\nbtn.addEventListener('click', timer);\n\nfunction timer() {\n  btn.disabled = true;\n  input.disabled = true;\n\n  const currentDateClick = new Date().getTime();\n  let datesDifferense = userSelectedDate.getTime() - currentDateClick;\n\n  timerChanger(convertMs(datesDifferense));\n  datesDifferense -= 1000;\n\n  const timeInterval = setInterval(() => {\n    timerChanger(convertMs(datesDifferense));\n      datesDifferense -= 1000;\n\n      if(datesDifferense < 0) {\n         clearInterval(timeInterval);\n      }\n  }, 1000);\n}\n\nfunction timerChanger(time) {\n  Object.keys(time).forEach(function(key) {\n    const lng = time[key].toString().length;\n    if(lng < 2) {\n       time[key] = '0'+time[key];\n    }\n\n    const field = document.querySelector('[data-'+key+']');\n\n    field.textContent = time[key];\n  });\n}"],"names":["input","btn","userSelectedDate","options","selectedDates","currentDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","timer","currentDateClick","datesDifferense","timerChanger","timeInterval","time","key","field"],"mappings":"sGAMA,MAAMA,EAAQ,SAAS,eAAe,iBAAiB,EACjDC,EAAM,SAAS,cAAc,YAAY,EAC/C,IAAIC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,cAAe,GACf,gBAAiB,EACjB,QAAQC,EAAe,CACnBF,EAAmBE,EAAc,GACjC,IAAIC,EAAc,IAAI,KAEnBH,EAAiB,QAAO,EAAKG,EAAY,QAAO,GAC/CJ,EAAI,SAAW,GAEfK,EAAS,KAAK,CACV,QAAS,qCACT,SAAU,WACV,gBAAiB,MACjB,aAAc,QACd,MAAO,OACP,QAAS,kBACvB,CAAW,GAEDL,EAAI,SAAW,EAEtB,CACH,EAEAM,EAAUP,EAAOG,CAAO,EAGxB,SAASK,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEAZ,EAAI,iBAAiB,QAASa,CAAK,EAEnC,SAASA,GAAQ,CACfb,EAAI,SAAW,GACfD,EAAM,SAAW,GAEjB,MAAMe,EAAmB,IAAI,KAAM,EAAC,QAAO,EAC3C,IAAIC,EAAkBd,EAAiB,QAAO,EAAKa,EAEnDE,EAAaT,EAAUQ,CAAe,CAAC,EACvCA,GAAmB,IAEnB,MAAME,EAAe,YAAY,IAAM,CACrCD,EAAaT,EAAUQ,CAAe,CAAC,EACrCA,GAAmB,IAEhBA,EAAkB,GAClB,cAAcE,CAAY,CAEhC,EAAE,GAAI,CACT,CAEA,SAASD,EAAaE,EAAM,CAC1B,OAAO,KAAKA,CAAI,EAAE,QAAQ,SAASC,EAAK,CAC1BD,EAAKC,GAAK,SAAQ,EAAG,OACxB,IACND,EAAKC,GAAO,IAAID,EAAKC,IAGxB,MAAMC,EAAQ,SAAS,cAAc,SAASD,EAAI,GAAG,EAErDC,EAAM,YAAcF,EAAKC,EAC7B,CAAG,CACH"}